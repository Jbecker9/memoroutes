exit
trip
exit
params
trip
exit
dest
exit
params
dest
exit
trip
dest
exit
user
departure
exit
params[:departure].lat
params[:departure][:lat]
params[:departure]
params
city
exit
city
exit
state
exit
state
exit
state
exit
state
exit
state
exit
trip
exit
state = State.find_or_create_by(state_name: params[:state])
state = State.find_by(state_name: params[:state]).first_or_create
state = State.where(state_name: params[:state]).first_or_create
state
state = State.where(state_name: params[:state])
state = State.where(state_name: params[:state]
params[:state]
params
exit
params[:departure][:city]
road_trip_params
exit
params
road_trip_params
params[:departure]
params[:departure].city
params[:departure](:city)
params[:departure][:city]
params[:departure]
params
exit
params[:departure][:city]
params
state
city
road_trip_params(city, state)
road_trip_params
exit
trip.departure
trip
exit
state
exit
state
exit
State.all
state
exit
state
exit
state
exit
road_trip_params(city, state)
params
departure_params
trip
exit
road_trips
exit
params
exit
trip
exit
remainder_in_feet
exit
remainder_in_feet
exit
remainder_in_feet
exit
remainder_in_feet
exit
remainder_in_feet
exit
remainder_in_feet.to_i
remainder * 5280
remainder
remainder_in_feet.to_f
remainder_in_feet
exit
remainder_in_feet
exit
remainder
exit
BigDecimal.distance_miles_remainder
distance_miles_remainder
b = BigDecimal.distance_miles_remainder
exit
distance_miles_remainder
exit
a = BigDecimal(distance_miles_remainder[1])
exit
distance_miles_remainder
exit
distance_miles_remainder
exit
distance
exit
archaversine_method
exit
lat_lng_math
exit
math
exit
math
exit
math
exit
math
exit
math
exit
lat_difference
lng_difference
exit
lng_difference.to_f
lng_difference.to_flt
lng_difference.to_float
lng_difference.to_int
lng_difference
lat_difference
exit
Math::cos(x_one)
math_four
exit
math_one
exit
y_two_radian
y_one_radian
x_two_radian
x_one_radian
exit
radian_conversion
exit
radian_conversion * coordinate
coordinate * (10 ** 15)
coordinate * 10 ** 15
coordinate * 10 ** 2
coordinate
radian_conversion
x_one
exit
coordinate
pi = Math::PI/180
Math::PI
radian_conversion
exit
self.object.departure
self.object
self.road_trip
self.departure
self
exit
params
clear
exit
params
exit
stop
exit
dest
exit
dest = trip.create_destination
trip
params
exit
dest = trip.create_destination
trip.destination.create
trip
exit
params
exit
params
exit
params[:coordinates][:lat]
params[:coordinates.lat]
params
exit
State.find_or_create_by(name: params[:state])
State.create(name: params[:state])
State.create_by(name: params[:state])
params[:state]
params
exit
params
exit
trip.create_departure
trip.departure
trip
exit
dep = trip.create_departure
trip
params
dep = Departure.create
dep = trip.departure.create
trip
exit
params
exit
dep = trip.departure.create()
dep = trip.departure.create
exit
dep = trip.departure.create
dep = trip.departures.create
trip
exit
dep = trip.departure.create
trip
params
exit
params
trip
exit
trip.creator
trip
exit
rt = user.road_trips.create
user
exit
rt = user.road_trips.create
exit
rt = user.road_trips.create
exit
rt.departure
dep = rt.departure.create
rt.departure
rt.departures
user.departures
user.rt
rt
